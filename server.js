/******************************************************
 * PLEASE DO NOT EDIT THIS FILE
 * the verification process may break
 * ***************************************************/
 
var bGround = require('fcc-express-bground');
var myApp = require('./myApp');
const express = require('express');
const app = express();
const path = require ('path');
const { time } = require('console');
const dotenv = require ('dotenv').config();
const bodyParser = require('body-parser');

const absolutePath  = __dirname + "/views/index.html";

app.use('/',express.static(__dirname + '/public'));

app.use((req,res,next)=>{
  console.log(req.method +" "+req.path+" - "+req.ip);
  next();
})



if (!process.env.DISABLE_XORIGIN) {
  app.use(function(req, res, next) {
    var allowedOrigins = ['https://narrow-plane.gomix.me', 'https://www.freecodecamp.com'];
    var origin = req.headers.origin || '*';
    if(!process.env.XORIG_RESTRICT || allowedOrigins.indexOf(origin) > -1){
      console.log(origin);
      res.setHeader('Access-Control-Allow-Origin', origin);
      res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    }
    next();
  });
};

app.get('/',(req,res)=>{
  res.sendFile(absolutePath)
});

app.get('/json',(req,res)=>{
  if (process.env.MESSAGE_STYLE === "uppercase")
  {
    res.json({"message" : "HELLO JSON"})
  };
  res.json({"message" : "Hello json"}) 
});

app.get('/now', (req,res,next) => {
  req.time = new Date().toString();
  next()
},(req,res,next) => {
    res.json({"time": req.time});
});

app.get('/:param1/echo',(req,res)=>{
  res.json({"echo" : req.params.param1});
})

app.get('/name',(req,res)=>{
  const firstName = req.query.first;
  const lastName  = req.query.last;
  res.json({name : `${firstName} ${lastName}`})
})

app.post('/name',(req,res)=>{
  const firstName = req.query.first;
  const lastName  = req.query.last;
  res.json({name : `${firstName} ${lastName}`})
})
var port = process.env.PORT || 3000;
bGround.setupBackgroundApp(app, myApp, __dirname).listen(port, function(){
  bGround.log('Node is listening on port '+ port + '...')
});

/******************************************************
 * PLEASE DO NOT EDIT THIS FILE
 * the verification process may break
 * ***************************************************/

